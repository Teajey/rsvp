package rsvp // import "github.com/Teajey/rsvp"


TYPES

type Config struct {
	HtmlTemplate *html.Template
	TextTemplate *text.Template

	// Controls which file extensions override the Accept header. E.g. ".json" will only accept "application/json" by default.
	//
	// You might instead set ".json" to accept "application/*", or "*/*" (although the latter is the default if ".json" weren't set at all)
	ExtToProposalMap map[string]string
}

func DefaultConfig() Config
    Sets Config.ExtensionToProposalMap = defaultExtToProposalMap

type Handler interface {
	ServeHTTP(h http.Header, r *http.Request) Response
}

type HandlerFunc func(h http.Header, r *http.Request) Response

type Response struct {
	Body         any
	TemplateName string
	SeeOther     string
	Status       int
}

func Body(data any, template ...string) Response
    Write data as a response body to whatever supported format is requested in
    the Accept header Optionally provide a template name for this response

func SeeOther(url string) Response

func (res *Response) MediaTypes(cfg *Config) iter.Seq[supportedType]

func (res *Response) Write(w http.ResponseWriter, r *http.Request, cfg Config) error

type ServeMux struct {
	Config
	// Has unexported fields.
}

func NewServeMux() *ServeMux

func (m *ServeMux) Handle(pattern string, handler Handler)

func (m *ServeMux) HandleFunc(pattern string, handler HandlerFunc)

func (m *ServeMux) ServeHTTP(w http.ResponseWriter, r *http.Request)

